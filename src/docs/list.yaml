components:
  schemas:
    BadRequestError:
      type: object
      properties:
        status: 
          type: boolean
        code: 
          type: number
        message: 
          type: string
        data: 
          type: object
          properties: 
            errors: 
              type: array
              items: 
                type: string
    UnauthorizedError:
      type: object
      properties:
        status:
          type: boolean
        code:
          type: number
        message:
          type: string
        data:
          type: object
          properties:
            error: 
              type: string

paths:
  /list:
    post:
      description: 'Create User List'
      security:
        - BearerAuth: []
      tags: 
        - List
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:  
                  type: string
                receipt_image:
                  type: string
                  format: binary
                thumbnail_image:
                  type: string
                  format: binary
                product_items:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      amount:
                        type: number
                      price:
                        type: number
                      total_price:
                        type: number
                      category:
                        type: string
                type:
                  type: string
                total_expenses:
                  type: number
                total_items:
                  type: number
                boughtAt:
                  type: string
                  format: date-time
        required:
          - title
          - receipt_image
          - thumbnail_image
          - product_items
          - type
          - total_expenses
          - total_items
          - boughtAt
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                    status: 
                      type: boolean
                    code: 
                      type: number
                    message: 
                      type: string
                    data: 
                      type: string
        400:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        401:
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/UnauthorizedError" 
    get:
      security:
        - BearerAuth: []
      tags: 
        - List
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: number
        - name: limit
          in: query
          required: false
          schema:
            type: number
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties: 
                  status: 
                    type: boolean
                  code: 
                    type: number
                  message: 
                    type: string
                  data: 
                    type: object
                    properties: 
                      lists: 
                        type: array
                        items: 
                          type: object
                          properties: 
                            id: 
                              type: number
                            title: 
                              type: string
                            type: 
                              type: string
                            total_expenses: 
                              type: string
                            total_products: 
                              type: number
                            total_items: 
                              type: number
                            boughtAt: 
                              type: string
                              format: date-time
                            image: 
                              type: string
                  pagination: 
                    type: object
                    properties: 
                      total: 
                        type: number
                      page: 
                        type: number
                      limit: 
                        type: number
                      totalPages: 
                        type: number
        401:
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/UnauthorizedError"

  /list/filter:
    get:
      description: 'Get List By Filtered'
      security:
        - BearerAuth: []
      tags:
        - List
      parameters:
        - name: type
          in: query
          description: 'Type of the list (e.g., Plan, Track)'
          required: true
          schema:
            type: string
        - name: month
          in: query
          description: 'Month for filtering the list'
          required: false
          schema:
            type: number
        - name: year
          in: query
          description: 'Year for filtering the list'
          required: false
          schema:
            type: number
        - name: page
          in: query
          description: 'Page number for pagination'
          required: true
          schema:
            type: number
        - name: limit
          in: query
          description: 'Limit the number of results per page'
          required: true
          schema:
            type: number
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  code:
                    type: number
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      lists:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: number
                            title:
                              type: string
                            type:
                              type: string
                            total_expenses:
                              type: string
                            total_products:
                              type: number
                            total_items:
                              type: number
                            boughtAt:
                              type: string
                              format: date-time
                            image:
                              type: string
                  pagination:
                    type: object
                    properties:
                      total:
                        type: number
                      page:
                        type: number
                      limit:
                        type: number
                      totalPages:
                        type: number
        401:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        404:
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  code:
                    type: number
                  message:
                    type: string
                  data:
                    type: string
                    format: nullable
  /list/{listID}:
    put:
      description: 'Update the entire list'
      security:
        - BearerAuth: []
      tags: 
        - List
      parameters:
        - name: listID
          in: path
          description: 'ID of the list to update'
          required: true
          schema:
            type: number
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                receipt_image:  
                  type: string
                  format: binary
                thumbnail_image:  
                  type: string
                  format: binary
                product_items:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                      amount:
                        type: number
                      price:
                        type: number
                      total_price:
                        type: number
                      category:
                        type: string
                type:
                  type: string
                total_expenses:
                  type: number
                total_items:
                  type: number
            required:
              - title
              - product_items
              - type
              - total_expenses
              - total_items
      responses:
        200:
          description: 'List updated successfully'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  code:
                    type: number
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      list_id:
                        type: string
                        description: 'ID of the updated list'
        400:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        401:
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        404:
          description: 'List not found, invalid ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  code:
                    type: number
                  message:
                    type: string
                  data:
                    type: string
                    format: nullable
    get:
      description: 'Get Detail List'
      security:
        - BearerAuth: []
      tags: 
        - List
      parameters:
        - name: listID
          in: path
          description: 'ID of the list to update'
          required: true
          schema:
            type: number
      responses:
        200:
          description: 'List updated successfully'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: boolean
                  code: 
                    type: number
                  message: 
                    type: string
                  data: 
                    type: object
                    properties: 
                      detailList: 
                        type: object
                        properties: 
                          title: 
                            type: string
                          receiptImage: 
                            type: string
                          thumbnailImage: 
                            type: string
                          boughtAt: 
                            type: string
                            format: date-time
                          Product_Items: 
                            type: array
                            items: 
                              type: object
                              properties: 
                                id: 
                                  type: number
                                name: 
                                  type: string
                                amount: 
                                  type: number
                                price: 
                                  type: string
                                totalPrice: 
                                  type: string
                                category: 
                                  type: string
                      detailItems: 
                        type: array
                        items: 
                          type: object
                          properties: 
                            id: 
                              type: number
                            name: 
                              type: string
                            amount: 
                              type: number
                            price: 
                              type: string
                            total_price: 
                              type: string
                            category: 
                              type: string
                      thumbnail_image: 
                        type: string
                      receipt_image: 
                        type: string
        401:
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
    delete:
      description: 'Delete List'
      security:
        - BearerAuth: []
      tags: 
        - List
      parameters:
        - name: listID
          in: path
          description: 'ID of the list to delete'
          required: true
          schema:
            type: number
      responses:
        200:
          description: 'List Deleted successfully'
          content:
            application/json:
              schema:
                type: object
                properties:
            status: 
              type: boolean
            code: 
              type: number
            message: 
              type: string
            data: 
              type: string
              format: nullable
        400:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        401:
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        